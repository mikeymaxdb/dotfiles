# bash
# vim: set ft=sh :
# shopt -s expand_aliases

RC_BRANCH='main'

alias git_branch="git branch 2>/dev/null | grep '*' | sed 's/* \(.*\)/\1/'"

alias ga='git add .'
alias gc='ga && git commit -am'
alias gs='git status -s'
alias gd='git diff'
alias gp='git pull --no-edit'
alias gpp='git push'
alias gppn='gpp --no-verify'
alias gppf='gppn --force-with-lease'
alias gb='git branch -a'
alias gm='git merge --no-edit'
alias gco='git checkout'
alias gcoo='gitCheckoutFZF'
alias glo='git log --pretty=format:"%C(green)%h %Cred%d %Creset%s %n%C(yellow)%ad%Cblue %cn%n" --decorate --date=relative --graph'
alias gl='glo -10'
alias gll='gl --numstat -p'
alias gpu='gpp -u origin "$(git_branch)"'
alias gfc='gc "$(git_branch)" && gppn'
alias gdlb='gitDeleteLocalBranches'
alias gnb='gitNewRemoteBranch'
alias gr='gitSyncRebase'
alias grc='ga && git rebase --continue'
alias grf='gppf'

gitCheckoutFZF() {
    # Checkout git branch with fzf (including remote branches)
    local branches branch
    branches=$(git branch --all | grep -v HEAD) &&
        branch=$(echo "$branches" |
        fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
        git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
}

gitDeleteLocalBranches(){
    # Delete local branches that are
    # deleted in the remote repo
    git fetch -p
    for branch in `git branch -vv | grep ": gone]" | awk '{print $1}'`; do
        git branch -D $branch
    done
}

gitNewRemoteBranch(){
    # Create a new local branch
    # and publish to remote repo
    gco -b $1
    gpu --no-verify # Skip pre-push git hook
}

gitSyncRebase() {
    # Pull changes from release branch
    # and merge into current branch
    git fetch origin "$RC_BRANCH":"$RC_BRANCH"
    git rebase "$RC_BRANCH"
}

# Git branch bash completion
if [ -f ~/.git-completion.bash ]; then
    . ~/.git-completion.bash

    # Add git completion to aliases
    # __git_complete g __git_main
    __git_complete gco _git_checkout
    __git_complete gm _git_merge
    __git_complete gp _git_pull
fi
